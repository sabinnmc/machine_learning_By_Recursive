//--------------------------------------------------
//! @file ErrorManager.hpp
//! @brief ｴﾗｰ管理ｸﾗｽ
//--------------------------------------------------
#pragma once

#include <vector>

#include "Sysdef.h"

//--------------------------------------------------
//! @brief ｴﾗｰ管理ｸﾗｽ
//!
//! ｴﾗｰ処理を管理する
//--------------------------------------------------
class CErrorManager{
public:
	//--------------------------------------------------
	//! @brief ｺﾝｽﾄﾗｸﾀ
	//--------------------------------------------------
	CErrorManager();

	//--------------------------------------------------
	//! @brief ｴﾗｰ発生中？
	//! @param[in]		code				確認したいｴﾗｰｺｰﾄﾞ
	//! @retval	true	ｴﾗｰ発生中
	//! @retval	false	ｴﾗｰが発生していない
	//--------------------------------------------------
	inline bool IsError(ErrorCode code)const{
		return m_errorTable[static_cast<int>(code)];
	}

	//--------------------------------------------------
	//! @brief ｴﾗｰ発生中？
	//!
	//! 複数指定し、1つでもｴﾗｰが発生していれば発生中とする
	//! @param[in]		code				確認したいｴﾗｰｺｰﾄﾞ
	//! @retval	true	ｴﾗｰ発生中
	//! @retval	false	ｴﾗｰが発生していない
	//--------------------------------------------------
	bool IsErrorOr(std::vector<ErrorCode> code)const;

	//--------------------------------------------------
	//! @brief ｴﾗｰ発生中？
	//!
	//! 複数指定し、全てにｴﾗｰが発生していれば発生中とする
	//! @param[in]		code				確認したいｴﾗｰｺｰﾄﾞ
	//! @retval	true	ｴﾗｰ発生中
	//! @retval	false	ｴﾗｰが発生していない
	//--------------------------------------------------
	bool IsErrorAnd(std::vector<ErrorCode> code)const;

	//--------------------------------------------------
	//! @brief ｴﾗｰ発生状況変更
	//! @param[in]		code				変更したいｴﾗｰｺｰﾄﾞ
	//! @param[in]		isError				ｴﾗｰ発生中？（true:発生中 false:発生していない）
	//--------------------------------------------------
	void SetError(ErrorCode code, bool isError);

private:
	std::vector<bool> m_errorTable;						//!< ｴﾗｰ発生状況ﾃｰﾌﾞﾙ

	//--------------------------------------------------
	//! @brief ﾛｸﾞ出力
	//!
	//! ｴﾗｰ発生時にはｴﾗｰﾛｸﾞ、ｴﾗｰ解消時には通常ﾛｸﾞに保存する
	//! @param[in]		isError				ｴﾗｰ発生中？（true:発生中 false:発生していない）
	//--------------------------------------------------
	void OutputLog(bool isError);
};
